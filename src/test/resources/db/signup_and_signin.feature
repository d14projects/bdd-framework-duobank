@REGRESSION
#@ui_to_db_crud
Feature: User Story 1: Appllicaton List
  As a user of Duobank Mortgage Application,
  I want to be able to sign up and log in securely using a database system that protects my personal and financial information,
  so that I can complete the mortgage application process with confidence.

#  @db_only
  Scenario: Validate tbl_users table schema and data storage
    Then "tbl_user" table should have the following columns:
      | id          |
      | email       |
      | password    |
      | first_name  |
      | last_name   |
      | phone       |
      | image       |
      | type        |
      | created_at  |
      | modified_at |
      | zone_id     |
      | church_id   |
      | country_id  |
      | active      |

    #  @db_only
#    Then "tbl_user" columns should correctly display corresponding user information:
#      | id          | unique identifier for the user(autogenerated)                     |
#      | email       | user's email address                                              |
#      | password    | user's hashed password                                            |
#      | first_name  | user's first name                                                 |
#      | last_name   | user's last name                                                  |
#      | phone       | user's phone number                                               |
#      | image       | user's profile image                                              |
#      | type        | user's role (e.g. customer, admin)                                |
#      | created_at  | timestamp of when the user's account was created                  |
#      | modified_at | timestamp of when the user's account was last modified            |
#      | zone_id     | ID of the zone associated with the user                           |
#      | church_id   | ID of the church associated with the user                         |
#      | country_id  | ID of the country associated with the user                        |
#      | active      | boolean indicating whether the user's account is currently active |

#  @db_only
  Scenario: The "tbl_users" table should not store duplicate email addresses.
    Then "tbl_user" table should not contain duplicate "email" addresses

#  @db_only
  Scenario: The "tbl_users" table should not allow duplicate email addresses.
    When the user creates a new user record in "tbl_user" table with the already existing email address "jglob@gmail.com"
    Then the db "tbl_user" table should not store the new user record

  @data_mapping
  Scenario: Verify data mapping of user registration process
#    Create a new user - UI
    Given the user navigates to the sign in page
    And the user clicks sign up link
    When The user fills up the fields with valid info
    Then The user should be able to sign up successfully
#    Verify the created user on the DB layer
    And the user should be created in the "tbl_user" table in the database
    And the data should be mapped correctly to the following columns in the "tbl_user" table:
      | first_name |
      | last_name  |
      | email      |
      | password   |
    And "id" the unique identifier for the user should be autogenerated by the database in the "tbl_user" table
